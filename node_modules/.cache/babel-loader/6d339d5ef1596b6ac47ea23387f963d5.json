{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  loading: false,\n  Errors: false,\n  users: []\n};\nconst profilesSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {\n    Loading: state => {\n      state.loading = true;\n      state.Error = false;\n    },\n    Error: state => {\n      state.loading = false;\n      state.Error = true;\n    },\n    Data: (state, {\n      payload\n    }) => {\n      state.loading = false;\n      state.Error = false;\n      state.users = payload;\n    }\n  }\n});\nconst {\n  Loading,\n  Error,\n  Data\n} = profilesSlice.actions;\nexport function FetchUsers() {\n  return async dispatch => {\n    dispatch(Loading());\n\n    try {\n      const response = await axios.get(\"https://ti-react-test.herokuapp.com/users\");\n      const data = response.data;\n      console.log(data); // dispatch(Data(data))\n    } catch (e) {\n      dispatch(Error());\n    }\n  };\n}\n_c = FetchUsers;\nexport default profilesSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchUsers\");","map":{"version":3,"sources":["C:/Users/MAIN PC/Desktop/aggy/profile/src/features/profiles/ProfileSlice.js"],"names":["createSlice","axios","initialState","loading","Errors","users","profilesSlice","name","reducers","Loading","state","Error","Data","payload","actions","FetchUsers","dispatch","response","get","data","console","log","e","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,MAAM,EAAE,KAFW;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,aAAa,GAAGN,WAAW,CAAC;AAChCO,EAAAA,IAAI,EAAE,OAD0B;AAEhCL,EAAAA,YAFgC;AAGhCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAGC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACAO,MAAAA,KAAK,CAACC,KAAN,GAAc,KAAd;AACD,KAJO;AAKRA,IAAAA,KAAK,EAAGD,KAAD,IAAW;AAChBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACC,KAAN,GAAc,IAAd;AACD,KARO;AASRC,IAAAA,IAAI,EAAE,CAACF,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,KAAwB;AAC5BH,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACC,KAAN,GAAc,KAAd;AACAD,MAAAA,KAAK,CAACL,KAAN,GAAcQ,OAAd;AACD;AAbO;AAHsB,CAAD,CAAjC;AAoBA,MAAM;AAAEJ,EAAAA,OAAF;AAAWE,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,IAA2BN,aAAa,CAACQ,OAA/C;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACP,OAAO,EAAR,CAAR;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CACrB,2CADqB,CAAvB;AAGA,YAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EALE,CAMF;AACD,KAPD,CAOE,OAAOG,CAAP,EAAU;AACVN,MAAAA,QAAQ,CAACL,KAAK,EAAN,CAAR;AACD;AACF,GAZD;AAaD;KAdeI,U;AAgBhB,eAAeT,aAAa,CAACiB,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  Errors: false,\r\n  users: [],\r\n};\r\n\r\nconst profilesSlice = createSlice({\r\n  name: \"users\",\r\n  initialState,\r\n  reducers: {\r\n    Loading: (state) => {\r\n      state.loading = true;\r\n      state.Error = false;\r\n    },\r\n    Error: (state) => {\r\n      state.loading = false;\r\n      state.Error = true;\r\n    },\r\n    Data: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.Error = false;\r\n      state.users = payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { Loading, Error, Data } = profilesSlice.actions;\r\n\r\nexport function FetchUsers() {\r\n  return async (dispatch) => {\r\n    dispatch(Loading());\r\n    try {\r\n      const response = await axios.get(\r\n        \"https://ti-react-test.herokuapp.com/users\"\r\n      );\r\n      const data = response.data;\r\n      console.log(data);\r\n      // dispatch(Data(data))\r\n    } catch (e) {\r\n      dispatch(Error());\r\n    }\r\n  };\r\n}\r\n\r\nexport default profilesSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}