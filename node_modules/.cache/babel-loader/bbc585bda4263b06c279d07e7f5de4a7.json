{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  loading: false,\n  hasErrors: false,\n  user: {}\n};\nconst UserSlice = createSlice({\n  name: \"profile\",\n  initialState,\n  reducers: {\n    Loading: state => {\n      state.loading = true;\n      state.hasErrors = false;\n    },\n    Errors: state => {\n      state.loading = false;\n      state.hasErrors = true;\n    },\n    Data: (state, {\n      payload\n    }) => {\n      state.loading = false;\n      state.hasErrors = false;\n      state.user = { ...payload\n      };\n    }\n  }\n});\nconst {\n  Loading,\n  Errors,\n  Data\n} = UserSlice.actions;\nexport function GetUserInfo(id) {\n  return async dispatch => {\n    dispatch(Loading());\n\n    try {\n      const response = await axios.get(`https://ti-react-test.herokuapp.com/users/${id}`);\n      const data = response.data;\n      dispatch(Data(data));\n    } catch (e) {\n      dispatch(Errors());\n    }\n  };\n}\n_c = GetUserInfo;\nexport default UserSlice.reducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetUserInfo\");","map":{"version":3,"sources":["C:/Users/MAIN PC/Desktop/aggy/profile/src/features/profiles/user.js"],"names":["createSlice","axios","initialState","loading","hasErrors","user","UserSlice","name","reducers","Loading","state","Errors","Data","payload","actions","GetUserInfo","id","dispatch","response","get","data","e","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,SAAS,EAAE,KAFQ;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;AAMA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC5BO,EAAAA,IAAI,EAAE,SADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAGC,KAAD,IAAW;AAClBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,IAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACD,KAJO;AAKRO,IAAAA,MAAM,EAAGD,KAAD,IAAW;AACjBA,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD,KARO;AASRQ,IAAAA,IAAI,EAAE,CAACF,KAAD,EAAQ;AAAEG,MAAAA;AAAF,KAAR,KAAwB;AAC5BH,MAAAA,KAAK,CAACP,OAAN,GAAgB,KAAhB;AACAO,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACL,IAAN,GAAa,EAAE,GAAGQ;AAAL,OAAb;AACD;AAbO;AAHkB,CAAD,CAA7B;AAoBA,MAAM;AAAEJ,EAAAA,OAAF;AAAWE,EAAAA,MAAX;AAAmBC,EAAAA;AAAnB,IAA4BN,SAAS,CAACQ,OAA5C;AAEA,OAAO,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AAC9B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAACR,OAAO,EAAR,CAAR;;AACA,QAAI;AACF,YAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAN,CACpB,6CAA4CH,EAAG,EAD3B,CAAvB;AAGA,YAAMI,IAAI,GAAGF,QAAQ,CAACE,IAAtB;AACAH,MAAAA,QAAQ,CAACL,IAAI,CAACQ,IAAD,CAAL,CAAR;AACD,KAND,CAME,OAAOC,CAAP,EAAU;AACVJ,MAAAA,QAAQ,CAACN,MAAM,EAAP,CAAR;AACD;AACF,GAXD;AAYD;KAbeI,W;AAehB,eAAeT,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  hasErrors: false,\r\n  user: {},\r\n};\r\n\r\nconst UserSlice = createSlice({\r\n  name: \"profile\",\r\n  initialState,\r\n  reducers: {\r\n    Loading: (state) => {\r\n      state.loading = true;\r\n      state.hasErrors = false;\r\n    },\r\n    Errors: (state) => {\r\n      state.loading = false;\r\n      state.hasErrors = true;\r\n    },\r\n    Data: (state, { payload }) => {\r\n      state.loading = false;\r\n      state.hasErrors = false;\r\n      state.user = { ...payload };\r\n    },\r\n  },\r\n});\r\n\r\nconst { Loading, Errors, Data } = UserSlice.actions;\r\n\r\nexport function GetUserInfo(id) {\r\n  return async (dispatch) => {\r\n    dispatch(Loading());\r\n    try {\r\n      const response = await axios.get(\r\n        `https://ti-react-test.herokuapp.com/users/${id}`\r\n      );\r\n      const data = response.data;\r\n      dispatch(Data(data));\r\n    } catch (e) {\r\n      dispatch(Errors());\r\n    }\r\n  };\r\n}\r\n\r\nexport default UserSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}